#!/bin/sh
die () {
    echo >&2 "$@"
    exit 1
}

[ "$#" -eq 1 ] || die "1 argument required, $# provided. Syntax: combinecvs column_to_combine"
echo $1 | grep -E -q '^[0-9]+$' || die "Numeric argument required for number_of_files parameter, $1 provided"

# retrieve all results files and place them in an array
FOLDER=`cat scenario`
#FILES=(`ls -t -r $FOLDER/results*.txt`)
FILES=(`cat filenames`)
FILESCOUNT=${#FILES[@]}

if [ $FILESCOUNT -eq 1 ]
then
    die "files should be more than one."
fi

if [ $FILESCOUNT -eq 2 ]
then
	join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]}
fi

if [ $FILESCOUNT -eq 3 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]}
fi

if [ $FILESCOUNT -eq 4 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]}
fi

if [ $FILESCOUNT -eq 5 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]}
fi

if [ $FILESCOUNT -eq 6 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,2.$1 - ${FILES[5]}
fi

if [ $FILESCOUNT -eq 7 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,2.$1 - ${FILES[5]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,2.$1 - ${FILES[6]}
fi

if [ $FILESCOUNT -eq 8 ]
then
        join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,2.$1 - ${FILES[5]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,2.$1 - ${FILES[6]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,2.$1 - ${FILES[7]}
fi

if [ $FILESCOUNT -eq 9 ]
then
       join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,2.$1 - ${FILES[5]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,2.$1 - ${FILES[6]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,2.$1 - ${FILES[7]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.$1 - ${FILES[8]}
fi

if [ $FILESCOUNT -eq 10 ]
then
      join -e- -j1 -o0,1.$1,2.$1 ${FILES[0]} ${FILES[1]} | join -e- -j1 -o0,1.2,1.3,2.$1 - ${FILES[2]} | join -e- -j1 -o0,1.2,1.3,1.4,2.$1 - ${FILES[3]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,2.$1 - ${FILES[4]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,2.$1 - ${FILES[5]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,2.$1 - ${FILES[6]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,2.$1 - ${FILES[7]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.$1 - ${FILES[8]} | join -e- -j1 -o0,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.10,2.$1 - ${FILES[9]}
fi

# Options to join used here are:
# use tab as input and output field separator
# -a1 -a2 include unmatched lines from the first and second file
# -e- use a "-" for missing fields
# -j1 use the first field as key in joining
# -o0,1.2,2.2 output line consists of the join field (0), second field of the first file (1.2), second field of the second file (2.2)

#join -e- -j1 -o0,1.2,2.2 <(awk -f agg.awk results-1-3-0.txt) <(awk -f agg.awk results-2-3-0.txt) | join -e- -j1 -o0,1.2,1.3,2.2 - <(awk -f agg.awk ${FILES[2]})
