export CLASSPATH=./:./libs/*:./bin/
# Retrieve input parameters
scenarioname=$1
echo "Scenario name:$scenarioname"
figuresrangetype=$2
echo "Figures range type:$figuresrangetype"
figuresrange=$3
echo "Figures range:$figuresrange"
nodesrange=$4
echo "Nodes range set:$nodesrange"
flowsrange=$5
echo "Flows range set:$flowsrange"
goalsrange=$6
echo "Goals range set:$goalsrange"
iterations=$7
echo "Running experiment with $iterations iterations"

# Set scenario name (for figures)
echo "$scenarioname" > output/scenario
# Set figures range (defines the names of figure curves)
echo "$figuresrange" > output/range
# Set figures range type (defines the type of figure curves)
echo "$figuresrangetype" > output/rangetype

# Shutting down IKMS (in case it is still running)
./shutDownIKMS 2> /dev/null

echo "Scenario: $scenarioname"
count=0
for nr in $nodesrange
do
   for fr in $flowsrange
   do
      for gr in $goalsrange
      do
	for it in 1 2 3 4 5 6 7 8 9 10
        #for (( it=1; it<=$iterations; it++ ))
        do
	echo "Iteration: $it"
        if [ -f output/`cat output/scenario`/results-$nr-$fr-$gr.$it ];
        then
        	echo "File output/`cat output/scenario`/results-$nr-$fr-$gr.$it exists."
        else
		count=`echo $count+1 | bc`
		echo Starting IKMS
		./IKMS &
		echo Waiting 5 secs
		sleep 5
		./startIKMSMeasurements
		# Syntax: nodesNumber informationSourcesNumber urisPerInformationSourceNumber totalTime method goalId monitoredFlows monitoredMethod monitoredGoalId
		# method: 3 (All)
		# goalID: 0 (Pull from Entity), 1 (Pull from Storage), 2 (Pub/Sub), 3 (Direct Communication), 4 (Compact 0), 5 (Compact 1), 6 (Compact 2), 7 (Compact 3)
		./singleExperiment $nr $fr 1 100000 3 $gr 3 30000 2>&1 | tee /tmp/ikms-experiment-$$.out
		echo "Waiting 10"
		sleep 10
		./stopIKMSMeasurements
		echo Waiting 5 secs
		sleep 5
		./shutDownIKMS &
		sleep 10
		./killikms
		echo Collecting results
		mkdir output/`cat output/scenario` 2> /dev/null
		cp ../output.txt output/`cat output/scenario`/results-$nr-$fr-$gr.$it
		echo Waiting 5 secs
		sleep 5
		#echo Stopping global controller and waiting to reboot
		#./stop
		#sleep 20
	fi
	done
        
	# calculate average output file
        echo "calculating average output file"
        ./output/averageoutputfile output/`cat output/scenario`/results-$nr-$fr-$gr
        # check if filenames is empty
        if [ -z "$filenames" ]; then
                filenames="`cat output/scenario`/results-$nr-$fr-$gr.txt"
        else
                filenames="$filenames `cat output/scenario`/results-$nr-$fr-$gr.txt"
        fi

	# Restarting global controller and waiting to reboot
        ./stop
        sleep 20
      done
   done
done

echo "created output files: $filenames"
echo "$filenames" > output/filenames

# Create latex file
cd output
./plotall
latex results.tex
dvipdf results.dvi
cp results.* `cat scenario`/
cd ..
